heat_template_version: 2013-05-23

description: >
  A document-based template to configure your Software Defined Environment.

parameters:
  # declaration of input parameters
  external_network_id:
    type: string
    description: Load Balancer Pool Subnet ID
    default: d2bdc5aa-c204-415a-b840-11a89312eb36
  flavor:
    type: string
    description: Flavor to be used for compute instance
    default: "m1.small"
  image:
    type: string
    description: Image used for servers
    default: lbaas
  private_subnet_id:
    type: string
    description: network on which the instances
    default: ecf36a0f-782d-4b19-a262-eb55234e9b87


resources:
  # declaration of template resources
  autoscaling_group:
    type: OS::Heat::AutoScalingGroup
    properties:
      min_size: 4
      max_size: 6
      resource:
        type: DockerServer.yaml
        properties:
          pool_id: { get_resource: load_balancer_pool }
          image: { get_param: image }
          flavor: { get_param: flavor }
          metadata: {"metering.stack": {get_param: "OS::stack_id"}}


  autoscaling_group_scaleup_policy:
    type: OS::Heat::ScalingPolicy
    properties:
      adjustment_type: change_in_capacity
      auto_scaling_group_id: {get_resource: autoscaling_group}
      cooldown: 60
      scaling_adjustment: 1
  autoscaling_group_scaledown_policy:
    type: OS::Heat::ScalingPolicy
    properties:
      adjustment_type: change_in_capacity
      auto_scaling_group_id: {get_resource: autoscaling_group}
      cooldown: 60
      scaling_adjustment: -1

  autoscaling_group_scaleup_policy_cpu_alarm_high:
    type: OS::Ceilometer::Alarm
    properties:
      meter_name: cpu_util
      statistic: avg
      period: 60
      evaluation_periods: 1
      threshold: 50
      alarm_actions:
        - {get_attr: [autoscaling_group_scaleup_policy, alarm_url]}
      matching_metadata: {'metadata.user_metadata.stack': {get_param: "OS::stack_id"}}
      comparison_operator: gt
  autoscaling_group_scaledown_policy_cpu_alarm_low:
    type: OS::Ceilometer::Alarm
    properties:
      meter_name: cpu_util
      statistic: avg
      period: 60
      evaluation_periods: 1
      threshold: 15
      alarm_actions:
        - {get_attr: [autoscaling_group_scaledown_policy, alarm_url]}
      matching_metadata: {'metadata.user_metadata.stack': {get_param: "OS::stack_id"}}
      comparison_operator: lt

  load_balancer:
    type: OS::Neutron::LoadBalancer
    properties:
      protocol_port: 80
      pool_id: {get_resource: load_balancer_pool}
  load_balancer_pool:
    type: OS::Neutron::Pool
    properties:
      protocol: HTTP
      monitors: [{get_resource: load_balancer_monitor}]
      lb_method: ROUND_ROBIN
      subnet_id: {get_param: private_subnet_id}
      vip:
        protocol_port: 80
  load_balancer_monitor:
    type: OS::Neutron::HealthMonitor
    properties:
      type: TCP
      delay: 3
      max_retries: 5
      timeout: 5

  vip_floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network_id: { get_param: external_network_id }
  vip_floating_assoc:
    type: OS::Neutron::FloatingIPAssociation
    properties:
      floatingip_id: { get_resource: vip_floating_ip }
      port_id: { get_attr: [ load_balancer_pool, vip, port_id ] }
      fixed_ip_address: { get_attr: [ load_balancer_pool, vip, address ] }



outputs:
  HTTP_Test_URL:
    description: The URL of the Load Balancer
    value:
      str_replace:
       template:  http://%lb_ip%
       params:
         "%lb_ip%": { get_attr: [ vip_floating_ip, floating_ip_address ] }
